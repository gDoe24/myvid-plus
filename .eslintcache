[{"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\index.js":"1","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\reportWebVitals.js":"2","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\App.js":"3","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\store.js":"4","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\tvshows\\tvDetail.js":"5","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\Home.js":"6","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\tvshows\\showsPage.js":"7","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\Header.js":"8","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\movies\\moviesPage.js":"9","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\search\\SearchDisplay.js":"10","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\movies\\movieDetail.js":"11","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\suggested.js":"12","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\Footer.js":"13","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\ProgressBar.js":"14","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\movies\\featured.js":"15","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\HomeSlider.js":"16","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\genresDisplay.js":"17","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\tvshows\\showsDisplay.js":"18","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\search\\Search.js":"19","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\search\\SelectSearch.js":"20","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\movies\\moviesDisplay.js":"21","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\reducers\\showDetailReducer.js":"22","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\reducers\\movieDetailReducer.js":"23","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\actions\\showDetailAction.js":"24","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\actions\\movies.js":"25","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\actions\\search.js":"26","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\actions\\movieDetailAction.js":"27","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\actions\\shows.js":"28","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\reducers\\index.js":"29","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\actions\\types.js":"30","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\reducers\\showsReducer.js":"31","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\reducers\\searchReducer.js":"32","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\reducers\\moviesReducer.js":"33","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\search\\SearchResults.js":"34","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\ScrollToTop.js":"35"},{"size":451,"mtime":1616888541399,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":1428,"mtime":1617232771572,"results":"39","hashOfConfig":"37"},{"size":366,"mtime":1614188608342,"results":"40","hashOfConfig":"37"},{"size":4740,"mtime":1616804103683,"results":"41","hashOfConfig":"37"},{"size":1976,"mtime":1617576009138,"results":"42","hashOfConfig":"37"},{"size":803,"mtime":1616290258445,"results":"43","hashOfConfig":"37"},{"size":1941,"mtime":1617232771577,"results":"44","hashOfConfig":"37"},{"size":865,"mtime":1616888541392,"results":"45","hashOfConfig":"37"},{"size":2550,"mtime":1616520175744,"results":"46","hashOfConfig":"37"},{"size":4903,"mtime":1616804103680,"results":"47","hashOfConfig":"37"},{"size":2987,"mtime":1617232771581,"results":"48","hashOfConfig":"37"},{"size":1882,"mtime":1617575903005,"results":"49","hashOfConfig":"37"},{"size":730,"mtime":1617576183752,"results":"50","hashOfConfig":"37"},{"size":4337,"mtime":1617576474717,"results":"51","hashOfConfig":"37"},{"size":3585,"mtime":1616520175741,"results":"52","hashOfConfig":"37"},{"size":2048,"mtime":1616888541387,"results":"53","hashOfConfig":"37"},{"size":4804,"mtime":1616888541397,"results":"54","hashOfConfig":"37"},{"size":1128,"mtime":1616175176454,"results":"55","hashOfConfig":"37"},{"size":1231,"mtime":1616520175748,"results":"56","hashOfConfig":"37"},{"size":4948,"mtime":1616888541390,"results":"57","hashOfConfig":"37"},{"size":2777,"mtime":1615314219317,"results":"58","hashOfConfig":"37"},{"size":2776,"mtime":1615315442004,"results":"59","hashOfConfig":"37"},{"size":3035,"mtime":1614388394428,"results":"60","hashOfConfig":"37"},{"size":5458,"mtime":1616173744853,"results":"61","hashOfConfig":"37"},{"size":1685,"mtime":1616520175739,"results":"62","hashOfConfig":"37"},{"size":3142,"mtime":1614351083907,"results":"63","hashOfConfig":"37"},{"size":4949,"mtime":1615236892479,"results":"64","hashOfConfig":"37"},{"size":479,"mtime":1617575903021,"results":"65","hashOfConfig":"37"},{"size":2482,"mtime":1617575903005,"results":"66","hashOfConfig":"37"},{"size":3096,"mtime":1615236387144,"results":"67","hashOfConfig":"37"},{"size":1472,"mtime":1616520175751,"results":"68","hashOfConfig":"37"},{"size":3097,"mtime":1615314960517,"results":"69","hashOfConfig":"37"},{"size":2880,"mtime":1616520175746,"results":"70","hashOfConfig":"37"},{"size":259,"mtime":1617232771578,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1rqqcpl",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\index.js",[],["155","156"],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\reportWebVitals.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\App.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\store.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\tvshows\\tvDetail.js",["157","158","159","160","161","162"],"import React, { useEffect} from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {getShowDetail, getShowCredits, getShowWatchProviders, \r\n    getShowVideos, getSimilarShows} from '../../actions/showDetailAction';\r\nimport {validShowProvidersSelector} from '../../reducers/showDetailReducer';\r\nimport Suggested from '../layout/suggested';\r\nimport '../../styles/detail.css';\r\nimport ProgressBar from \"../layout/ProgressBar\";\r\n\r\n\r\n\r\n\r\nfunction TvDetail({ match, show, providers, getShowDetail, getShowCredits, getShowWatchProviders, \r\n    getShowVideos, getSimilarShows}){\r\n    \r\n    useEffect(() => {\r\n        getShowDetail();\r\n        getShowCredits();\r\n        getShowWatchProviders(); \r\n        getShowVideos(); \r\n        getSimilarShows();\r\n    }, [])\r\n    const m = match.params.id;\r\n    const mql = window.matchMedia('(max-width: 420px)');\r\n    return (\r\n        <div className=\"movie-detail-main\" key={m}>\r\n            {show.loading ? \r\n                <h2>Loading </h2> :\r\n            <section className=\"detail\">\r\n                 \r\n                <div className=\"detail-info\">\r\n                    <div className=\"detail-title-score\">\r\n                        <h1 className=\"fw-dark\" id=\"detail-title\">{show.show_detail.name}</h1>\r\n                        <div className=\"detail-score\">\r\n                            <ProgressBar rating={show.show_detail.vote_average}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"detail-btns\">\r\n                        <a href=\"#\" className=\"btn fi-play dt-play\">\r\n                            <i className=\"bi bi-play-fill\"></i>Play\r\n                        </a>\r\n                        <a href=\"#\" className=\"btn fi-trailer dt-trailer fw-light\"><i className=\"bi bi-film\"></i>Watch Trailer\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"overview-section\">\r\n                        <h2 className=\"detail-overview\">Overview</h2>\r\n                        <p className=\"detail-overview-p lead\" id=\"\">\r\n                            {show.show_detail.overview}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"detail-cd\">\r\n                        <div className=\"cast\">\r\n                            <h2 className=\"fw-dark\">Starring:</h2>\r\n                                {show.show_credits.cast.slice(0,5).map((actor, idx) => {\r\n                                    return (\r\n                                        <div className=\"cast-n\" key={actor.id}>{actor.name}</div>\r\n                                    )\r\n                                })}\r\n                            \r\n                        </div>\r\n                        <div className=\"watch\">\r\n                            <h2>Where to Watch</h2>\r\n                            { providers ? \r\n                              providers.map((provider, idx) => {\r\n                                return <div key={`${provider}-${idx}`}>\r\n                                    <img className=\"me-3\"\r\n                                        src={`${process.env.PUBLIC_URL}/${provider.toLowerCase()}.svg`}/>\r\n                                    {provider}\r\n                                </div>\r\n                            }) \r\n                            : <div>None</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                <img className=\"detail-pic\"\r\n                    src={`https://www.themoviedb.org/t/p/original${\r\n                        mql.matches == false ?\r\n                        show.show_detail.backdrop_path : show.show_detail.poster_path\r\n                        }`}>\r\n                </img>\r\n                <div className=\"overlay\"></div>\r\n                \r\n            </section>\r\n} \r\n            <Suggested \r\n            suggested={show.similar_shows} name={show.show_detail.name}/>\r\n            </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        show: state.showDetailReducer,\r\n        providers: validShowProvidersSelector(state.showDetailReducer)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n        return {\r\n            getShowDetail: () => dispatch(getShowDetail(ownProps.match.params.id)),\r\n            getShowCredits: () => dispatch(getShowCredits(ownProps.match.params.id)),\r\n            getShowWatchProviders: () => dispatch(getShowWatchProviders(ownProps.match.params.id)),\r\n            getShowVideos: () => dispatch(getShowVideos(ownProps.match.params.id)),\r\n            getSimilarShows: () => dispatch(getSimilarShows(ownProps.match.params.id))\r\n        }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TvDetail);","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\Home.js",["163","164"],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\tvshows\\showsPage.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\Header.js",["165","166"],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\movies\\moviesPage.js",["167"],"import React, { Fragment, useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport GenreDisplay from '../layout/genresDisplay';\r\nimport MoviesDisplay from './moviesDisplay';\r\nimport '../../styles/displayPages.css';\r\n\r\n\r\nfunction MoviesPage({ movies }) {\r\n\r\n    const [active, setActive] = useState(0);\r\n\r\n    const handleGenre = (id) => {\r\n        setActive(id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"display-main\">\r\n            <h1>Movies Page</h1>\r\n            <GenreDisplay handleGenre={handleGenre}\r\n                          genres={movies.genres} active={active}/>\r\n            <MoviesDisplay genre={movies.genres[active]} key={movies.genres[active].id}/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        movies: state.moviesReducer\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(MoviesPage);","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\search\\SearchDisplay.js",["168","169"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { searchMovies, searchShows } from '../../actions/search';\r\nimport {useHistory, useLocation} from 'react-router-dom';\r\nimport SelectSearch from './SelectSearch';\r\nimport SearchResults from './SearchResults';\r\nimport '../../styles/search.css';\r\n\r\n/* DISPLAY COMPONENT FOR WHEN USER SEARCHES. */\r\n\r\nfunction SearchDisplay({ multi, searchMovies, searchShows }){\r\n    \r\n    let currentUrlParams= new URLSearchParams(useLocation().search);\r\n    const currentQuery = currentUrlParams.get('query');\r\n    \r\n    const replaceWhitespace = (searchTerm) => {\r\n        return searchTerm.replace(\" \", \"%20\");\r\n    }\r\n    var dbFriendly = replaceWhitespace(currentQuery);\r\n\r\n    const currentPage = currentUrlParams.get('page');\r\n    const currentActive = currentUrlParams.get('active');\r\n\r\n    const [page, setPage] = useState(currentPage);\r\n    const [active, setActive] = useState(currentActive);\r\n    \r\n    let history = useHistory();\r\n\r\n\r\n    useEffect(() => {\r\n        currentUrlParams.set('page', page);\r\n        currentUrlParams.set('active', active);\r\n        \r\n        searchMovies(dbFriendly, page);\r\n        searchShows(dbFriendly, page);\r\n\r\n        history.push(window.location.pathname + \"?\" + currentUrlParams);\r\n    }, [page, active])\r\n\r\n    const handleClick = (id) => {\r\n        setActive(id);\r\n        setPage(1);\r\n    };\r\n    const movies = multi.movies;\r\n    const shows = multi.shows;\r\n\r\n    const activeType = active == \"movies\" ? movies : shows;\r\n    const moviesTotal = multi.total_movies;\r\n    const showsTotal = multi.total_shows\r\n    \r\n    \r\n    return(\r\n        <div className=\"search-container\">\r\n            <SelectSearch \r\n                    handleClick={handleClick}\r\n                    active={active}\r\n                    movieTotal={moviesTotal}\r\n                    showTotal={showsTotal}\r\n                    />\r\n            <SearchResults \r\n                    multi={activeType}\r\n                    active={active}\r\n                    page={page}\r\n                    setPage={setPage}/>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        multi: state.searchReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchMovies: (query, page) => dispatch(searchMovies(query, page)),\r\n        searchShows: (query, page) => dispatch(searchShows(query, page))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchDisplay);","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\movies\\movieDetail.js",["170","171","172","173","174","175","176"],"import React, {useEffect} from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport '../../styles/detail.css';\r\nimport {getMovieDetail, getMovieCredits, getWatchProviders, \r\n        getVideos, getSimilarMovies} from '../../actions/movieDetailAction';\r\nimport {validProvidersSelector} from '../../reducers/movieDetailReducer';\r\nimport Suggested from '../layout/suggested';\r\nimport ProgressBar from \"../layout/ProgressBar\";\r\n\r\nfunction MovieDetail({ movie, providers, getMovieDetail, getMovieCredits, getWatchProviders,\r\n                      getSimilarMovies, getVideos }){\r\n    useEffect(() => {\r\n        getMovieDetail();\r\n        getMovieCredits();\r\n        getWatchProviders();\r\n        getVideos();\r\n        getSimilarMovies();\r\n    }, [])\r\n    \r\n    const mql = window.matchMedia('(max-width: 420px)');\r\n\r\n    \r\n    return (\r\n        \r\n        <div className=\"movie-detail-main\">\r\n            {movie.loading ? \r\n                <h2>Loading </h2> :\r\n            <section className=\"detail\">\r\n                 \r\n                <div className=\"detail-info\">\r\n                    <div className=\"detail-title-score\">\r\n                        <h1 className=\"fw-dark\" id=\"detail-title\">{movie.movie_detail.title}</h1>\r\n                        <div className=\"detail-score\">\r\n                            <ProgressBar rating={movie.movie_detail.vote_average}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"detail-btns\">\r\n                        <a href=\"#\" className=\"btn fi-play dt-play\">\r\n                            <i className=\"bi bi-play-fill\"></i>Play\r\n                        </a>\r\n                        <a href=\"#\" className=\"btn fi-trailer dt-trailer fw-light\"><i className=\"bi bi-film\"></i>Watch Trailer\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"overview-section\">\r\n                        <h2 className=\"detail-overview\">Overview</h2>\r\n                        <p className=\"detail-overview-p lead\" id=\"\">\r\n                            {movie.movie_detail.overview}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"detail-cd\">\r\n                        <div className=\"cast\">\r\n                            <h2 className=\"fw-dark\">Starring:</h2>\r\n                                {movie.movie_credits.cast.slice(0,5).map((actor, idx) => {\r\n                                    return (\r\n                                        <span className=\"cast-n\" key={actor.id}>{\r\n                                            idx == 4 ? actor.name :\r\n                                            `${actor.name}, `}\r\n                                            </span>\r\n                                    )\r\n                                })}\r\n                            \r\n                        </div>\r\n                        <div className=\"watch\">\r\n                            <h2>Where to Watch</h2>\r\n                            { providers ? \r\n                              providers.map((provider, idx) => {\r\n                                return <div key={`${provider}-${idx}`} className=\"watch-n\">\r\n                                    <img className=\"me-3 watch-img\"\r\n                                        src={`${process.env.PUBLIC_URL}/${provider.toLowerCase()}.svg`}/>\r\n                                    {provider}\r\n                                </div>\r\n                            }) \r\n                            : <div className=\"watch-n\">N/A</div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                <img className=\"detail-pic\"\r\n                    src={`https://www.themoviedb.org/t/p/original${\r\n                        mql.matches == false ? \r\n                        movie.movie_detail.backdrop_path : movie.movie_detail.poster_path}`}>\r\n                </img>\r\n                <div className=\"overlay\"></div>\r\n                \r\n            </section>\r\n}\r\n            <Suggested suggested={movie.similar_movies} name={movie.movie_detail.title}/>\r\n            </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        movie: state.movieDetailReducer,\r\n        providers: validProvidersSelector(state.movieDetailReducer)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n        return {\r\n            getMovieDetail: () => dispatch(getMovieDetail(ownProps.match.params.id)),\r\n            getMovieCredits: () => dispatch(getMovieCredits(ownProps.match.params.id)),\r\n            getWatchProviders: () => dispatch(getWatchProviders(ownProps.match.params.id)),\r\n            getVideos: () => dispatch(getVideos(ownProps.match.params.id)),\r\n            getSimilarMovies: () => dispatch(getSimilarMovies(ownProps.match.params.id))\r\n        }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetail);","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\suggested.js",["177"],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\Footer.js",["178","179","180","181"],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\ProgressBar.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\movies\\featured.js",["182","183","184","185","186","187","188"],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\HomeSlider.js",["189","190","191"],"import React, { Fragment } from 'react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, {Navigation, Virtual} from 'swiper';\r\nimport 'swiper/swiper-bundle.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nSwiperCore.use([Navigation, Virtual]);\r\n\r\nfunction HomeSlider(props){\r\n\r\n    const moviesReducer = props.moviesReducer;\r\n    const showsReducer = props.showsReducer;\r\n\r\n    const rows = [];\r\n    var m_i = 0;\r\n    var t_j = 0;\r\n\r\n    for (let i = 0; i < 8; i ++)\r\n    {\r\n        if (i % 2 == 0){\r\n            rows.push(moviesReducer.genres[m_i]);\r\n            m_i ++;\r\n        }\r\n        else{\r\n            rows.push(showsReducer.genres[t_j]);\r\n            t_j ++;\r\n        }\r\n    }\r\n\r\n    const slides = (\r\n        rows.map((genre, idx) => {\r\n            return(\r\n            <div key={`genre-${idx}`} className=\"album-row\">\r\n            <div className=\"album-title\">\r\n                <p className=\"album-title-h\">{genre.title}</p>\r\n            </div>\r\n            {genre.loading == true ? <h2>Loading</h2> :\r\n            \r\n            <Fragment>\r\n            <Swiper\r\n                id=\"main\" \r\n                navigation\r\n                slidesPerView={7}\r\n                spaceBetween={20}\r\n                breakpoints={{\r\n                    0:{\r\n                        slidesPerView: 3,\r\n                    },\r\n                    // when window width is >= 640px\r\n                    500: {\r\n                      slidesPerView: 4,\r\n                    },\r\n                    // when window width is >= 768px\r\n                    \r\n                    992: {\r\n                        slidesPerView: 5,\r\n                    },\r\n                    1200: {\r\n                        slidesPerView: 6,\r\n                        spaceBetween: 30,\r\n                    },\r\n                    1400: {\r\n                        slidesPerView: 7,\r\n                    }\r\n                  }}\r\n                virtual\r\n                >\r\n                {genre.data.map((multi, idx) =>{\r\n                return (\r\n                    <SwiperSlide alt={multi.title ? multi.title \r\n                                                    : multi.name } \r\n                                 key={`slide-${idx}`} virtualIndex={`slide-${idx}`}>\r\n                        <div key={`g-card-${idx}`} className=\"g-card\">\r\n                        <div key={`img-container-${idx}`}className=\"image-container\">\r\n                            <Link  key={`href-${idx}`} to={ multi.title ? `/movies/${multi.id}`\r\n                                                            :`/tv/${multi.id}`}>\r\n                            <img key={`g-card-pic-${idx}`} className=\"card-pic\" \r\n                            src={`https://www.themoviedb.org/t/p/original${multi.poster_path}`} />\r\n                            </Link>\r\n                        </div>\r\n                        <div key={`card-title-area-${idx}`} className=\"card-title-area\">\r\n                        <h4 key={`card-title-${idx}`} className=\"card-title\">{multi.title ? multi.title : multi.name}</h4>\r\n                        </div>\r\n                        </div>\r\n                    </SwiperSlide>\r\n                    )\r\n                })}\r\n            </Swiper>                \r\n            </Fragment>\r\n        }\r\n        </div>\r\n            )\r\n        })\r\n    )\r\n\r\n    return(\r\n        <div className=\"album\">\r\n                <div className=\"album-container\">\r\n                {slides}\r\n                </div>\r\n                \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default HomeSlider;\r\n","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\genresDisplay.js",["192"],"import React, {Fragment} from 'react';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport SwiperCore, {Navigation, Virtual} from 'swiper';\r\nimport 'swiper/swiper-bundle.css';\r\nimport '../../styles/displayPages.css';\r\n\r\nSwiperCore.use([Navigation, Virtual]);\r\n\r\nfunction GenreDisplay(props){\r\n\r\n    const genres = props.genres;\r\n    return (\r\n            <div className=\"genres-row\">\r\n                <Fragment>\r\n                    <Swiper\r\n                    id=\"main\"\r\n                    key={`swiper`}\r\n                    navigation\r\n                    virtual\r\n                    slidesPerView={6}\r\n                    breakpoints={{\r\n                        0:{\r\n                            slidesPerView: 2,\r\n                        },\r\n                        600: {\r\n                          slidesPerView: 3,\r\n                        },\r\n                        992: {\r\n                            slidesPerView: 4,\r\n                        },\r\n                        1200: {\r\n                            slidesPerView: 5,\r\n                        },\r\n                        1400: {\r\n                            slidesPerView: 6,\r\n                        }\r\n                      }}>\r\n                        {genres.map((genre, idx) => {\r\n                            return(\r\n                                <SwiperSlide key={`swiperslide-${idx}`}>\r\n                                <button className={`${idx == props.active ? `genre-box genre-active`: \r\n                                ` genre-box genre-deactive`}`} key={`genre-${idx}`} \r\n                                        onClick={() => props.handleGenre(idx)}>\r\n                                    <p key={`${genre.title}`} className=\"genre-title\">{genre.title}</p>\r\n                                </button>\r\n                                </SwiperSlide>\r\n                                )\r\n                        })}\r\n                    </Swiper>\r\n                </Fragment>         \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GenreDisplay;","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\tvshows\\showsDisplay.js",["193","194","195","196","197","198","199"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getTrending } from '../../actions/movies';\r\nimport { getShowGenreById, fetchData, getTrendingShows } from '../../actions/shows';\r\n\r\nfunction ShowsDisplay({props, shows, getShowGenreById, getTrendingShows, fetchData}){\r\n    \r\n    const [isBottom, setIsBottom] = useState(false);\r\n    const [page, incrementPage] = useState(2);\r\n\r\n    useEffect(() => {\r\n        if (genre.id == 0){\r\n            getTrendingShows();\r\n        }\r\n        else{\r\n            getShowGenreById();\r\n        }\r\n        window.addEventListener('scroll', infinteLoop);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (isBottom){\r\n            fetchData(page);\r\n            incrementPage(page + 1);\r\n            setIsBottom(false);\r\n            setTimeout(1000);\r\n        }\r\n    }, [isBottom])\r\n\r\n    \r\n\r\n    const infinteLoop = () => {\r\n        const scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;\r\n        const scrollHeight = (document.documentElement && document.documentElement.scrollHeight) || document.body.scrollHeight;\r\n        if (scrollTop + window.innerHeight + 50 >= scrollHeight)\r\n        {\r\n            setIsBottom(true);\r\n        }\r\n    }\r\n    \r\n    const genre = props.genre;\r\n    const popular = shows.genres[0];\r\n    const popularShows = (\r\n        popular.loading ?\r\n            <h3>Loading</h3> :\r\n            popular.data.map((show, idx) => {\r\n                return (\r\n                    <div key={`display-g-card-${idx}`} className=\"display-g-card\">\r\n                        <Link  key={`href-${idx}`} to={ show.name ? `/tv/${show.id}`\r\n                                                            :`/tv/${show.id}`}>\r\n                        <div key={`display-img-container-${idx}`}className=\"display-image-container\">\r\n                            \r\n                            <img key={`display-g-card-pic-${idx}`} className=\"display-card-pic\" \r\n                            src={`https://www.themoviedb.org/t/p/original${show.poster_path}`} />\r\n                        </div>\r\n                        </Link>\r\n                        <div key={`display-card-overlay-${idx}`} className=\"display-card-overlay\">\r\n                            <h4 key={`display-card-title-${idx}`} className=\"display-card-title\">\r\n                                {show.name}\r\n                            </h4>\r\n                        </div>                        \r\n                    </div>\r\n                )\r\n            })\r\n    )\r\n\r\n    const genreById = (\r\n        shows.genre_by_id.loading ?\r\n            <h3>Loading</h3> :\r\n            shows.genre_by_id.data.map((show, idx) => {\r\n                return (\r\n                    <div key={`display-g-card-${idx}`} className=\"display-g-card\">\r\n                        <Link  key={`href-${idx}`} to={ show.name ? `/tv/${show.id}`\r\n                                                            :`/tv/${show.id}`}>\r\n                        <div key={`display-img-container-${idx}`}className=\"display-image-container\">\r\n                            \r\n                            <img key={`display-g-card-pic-${idx}`} className=\"display-card-pic\" \r\n                            src={`https://www.themoviedb.org/t/p/original${show.poster_path}`} />\r\n                        </div>\r\n                        </Link>\r\n                        <div key={`display-card-overlay-${idx}`} className=\"display-card-overlay\">\r\n                            <h4 key={`display-card-title-${idx}`} className=\"display-card-title\">\r\n                                {show.name}\r\n                            </h4>\r\n                        </div>                        \r\n                    </div>\r\n                )\r\n            })\r\n    )\r\n    \r\n    return (\r\n        <div key={`shows-${genre.title}`} className=\"shows-container\">\r\n            <div className=\"active-genre\">\r\n                <h1>{genre.title}</h1>\r\n            </div>\r\n            <div key={`genre-${genre.title}`} className=\"display-album-container\">\r\n                {genre.id == 0 ? \r\n                    popularShows :\r\n                    genreById\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        shows: state.showsReducer,\r\n        props: ownProps\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        getTrendingShows: () => dispatch(getTrendingShows()),\r\n        getShowGenreById: () => dispatch(getShowGenreById(ownProps.genre.id, 1)),\r\n        fetchData: (page) => dispatch(fetchData(ownProps.genre.id, page))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowsDisplay);","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\search\\Search.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\search\\SelectSearch.js",["200","201"],"import React from 'react';\r\nimport '../../styles/displayPages.css';\r\n\r\nexport default function SelectSearch(props){\r\n    \r\n    return (\r\n        <div className=\"search-aside\">\r\n            <div className=\"title-box\">\r\n                <span className=\"aside-title\">Search Results</span>\r\n            </div>\r\n            <span className=\"divider\"></span>\r\n            <button className={`${props.active == \"movies\" ? `search-type-box search-results-active`: \r\n                    ` search-type-box search-results-deactive`}`} key={`search-movies`} \r\n                            onClick={() => props.handleClick(\"movies\")}>\r\n                        <span className=\"search-type\">Movies</span>\r\n                        <span className=\"type-amount\">{props.movieTotal}</span>\r\n            </button>\r\n            <button className={`${props.active == \"shows\" ? `search-type-box search-results-active`: \r\n            ` search-type-box search-results-deactive`}`} key={`search-shows`} \r\n                    onClick={() => props.handleClick(\"shows\")}>\r\n                    <span className=\"search-type\">Shows</span>\r\n                    <span className=\"type-amount\">{props.showTotal}</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\movies\\moviesDisplay.js",["202","203","204","205","206","207"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getGenreById, fetchMoviesData, getTrending } from '../../actions/movies';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction MoviesDisplay({props, getGenreById, fetchMoviesData, getTrending, movies}){\r\n    \r\n    const [isBottom, setIsBottom] = useState(false);\r\n    const [page, incrementPage] = useState(2);\r\n    const genre = props.genre;\r\n\r\n    useEffect(() => {\r\n        if (genre.id == 0)\r\n        {\r\n            getTrending('movie');\r\n        }\r\n        else{\r\n            getGenreById();\r\n        }\r\n        window.addEventListener('scroll', infinteLoop);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (isBottom)\r\n        {\r\n            fetchMoviesData(page);\r\n            incrementPage(page + 1);\r\n            setIsBottom(false);\r\n            setTimeout(1000);\r\n        }\r\n    }, [isBottom])\r\n\r\n    const infinteLoop = () => {\r\n        const scrollTop = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;\r\n        const scrollHeight = (document.documentElement && document.documentElement.scrollHeight) || document.body.scrollHeight;\r\n        if (scrollTop + window.innerHeight + 50 >= scrollHeight)\r\n        {\r\n            setIsBottom(true);\r\n        }\r\n    }\r\n\r\n    const popular = movies.genres[0];\r\n    const trendingMovies = (\r\n            popular.loading ? \r\n                <h3>Loading</h3> :\r\n                \r\n                popular.data.map((movie, idx) => {\r\n                    return (\r\n                        <div key={`display-g-card-${idx}`} className=\"display-g-card\">\r\n                            <Link  key={`href-${idx}`} to={ movie.title ? `/movies/${movie.id}`\r\n                                                                :`/tv/${movie.id}`}>\r\n                            <div key={`display-img-container-${idx}`}className=\"display-image-container\">\r\n                                \r\n                                <img key={`display-g-card-pic-${idx}`} className=\"display-card-pic\" \r\n                                src={`https://www.themoviedb.org/t/p/original${movie.poster_path}`} />\r\n                            </div>\r\n                            </Link>\r\n                            <div key={`display-card-overlay-${idx}`} className=\"display-card-overlay\">\r\n                                <h4 key={`display-card-title-${idx}`} className=\"display-card-title\">\r\n                                    {movie.title ? movie.title : movie.name}\r\n                                </h4>\r\n                            </div>                        \r\n                        </div>\r\n                    )\r\n                })\r\n    )\r\n        \r\n\r\n    const genreById = (\r\n            movies.genre_by_id.loading ? \r\n            <h3>Loading</h3> :\r\n            movies.genre_by_id.data.map((movie, idx) => {\r\n                return (\r\n                    <div key={`display-g-card-${idx}`} className=\"display-g-card\">\r\n                        <Link  key={`href-${idx}`} to={ movie.title ? `/movies/${movie.id}`\r\n                                                            :`/tv/${movie.id}`}>\r\n                        <div key={`display-img-container-${idx}`}className=\"display-image-container\">\r\n                            \r\n                            <img key={`display-g-card-pic-${idx}`} className=\"display-card-pic\" \r\n                            src={`https://www.themoviedb.org/t/p/original${movie.poster_path}`} />\r\n                        </div>\r\n                        </Link>\r\n                        <div key={`display-card-overlay-${idx}`} className=\"display-card-overlay\">\r\n                            <h4 key={`display-card-title-${idx}`} className=\"display-card-title\">\r\n                                {movie.title ? movie.title : movie.name}\r\n                            </h4>\r\n                        </div>                        \r\n                    </div>\r\n                )\r\n            })\r\n        )\r\n    \r\n\r\n    return (\r\n        <div className=\"movies-container\">\r\n            <div className=\"active-genre\">\r\n                <h1 className=\"active-genre-title\">{genre.title}</h1>\r\n            </div>\r\n        <div key={`genre-${genre.title}`} className=\"display-album-container\">\r\n        { genre.id == 0 ? \r\n        trendingMovies :\r\n        genreById\r\n    }\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        movies: state.moviesReducer,\r\n        props: ownProps\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const genre = ownProps.genre.id\r\n    return {\r\n        getGenreById: () => dispatch(getGenreById(genre)),\r\n        fetchMoviesData: (page) => dispatch(fetchMoviesData(genre, page)),\r\n        getTrending: (media_type) => dispatch(getTrending(media_type))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesDisplay);","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\reducers\\showDetailReducer.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\reducers\\movieDetailReducer.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\actions\\showDetailAction.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\actions\\movies.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\actions\\search.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\actions\\movieDetailAction.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\actions\\shows.js",["208"],"import axios from 'axios';\r\nimport { FETCH_SHOWS_REQUEST, FETCH_SHOWS_FAILURE, TRENDING_SHOWS_SUCCESS,\r\n        ACTION_SHOWS_SUCCESS, COMEDY_SHOWS_SUCCESS, SCIFI_SHOWS_SUCCESS,\r\n        CRIME_SHOWS_SUCCESS, ANIMATION_SHOWS_SUCCESS, SHOW_GENRE_BY_ID_SUCCESS, CONCAT_GENRE_BY_ID} from './types';\r\n\r\n/* TODO: Implement actions for endpoints:\r\n    GET Popular\r\n    GET Top Rated\r\n    GET TV Airing Today\r\n    GET Details\r\n    GET Seasons\r\n    Get Images\r\n    GET Similar TV Shows\r\n    GET Watch Providers\r\n*/\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\n// GET Trending Shows\r\nexport const getTrendingShows = () => (dispatch) =>{\r\n    dispatch({\r\n        type: FETCH_SHOWS_REQUEST\r\n    })\r\n    axios.get(`https://api.themoviedb.org/3/trending/tv/week?api_key=${API_KEY}`)\r\n        .then(res => {\r\n            // Response.data is the object of shows\r\n            const shows = res.data[\"results\"];\r\n            dispatch({\r\n                type: TRENDING_SHOWS_SUCCESS,\r\n                payload: shows\r\n            });\r\n        }).catch(err => {\r\n            dispatch({\r\n                type: FETCH_SHOWS_FAILURE,\r\n                error: err.message\r\n            })\r\n        });\r\n};\r\n\r\n// GET Action and Adventure Shows\r\nexport const getActionShows = () => (dispatch) =>{\r\n    axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=1&with_genres=10759`)\r\n        .then(res => {\r\n            // Response.data is the object of shows\r\n            const shows = res.data[\"results\"];\r\n            dispatch({\r\n                type: ACTION_SHOWS_SUCCESS,\r\n                payload: shows\r\n            });\r\n        }).catch(err => {\r\n            dispatch({\r\n                type: FETCH_SHOWS_FAILURE,\r\n                error: err.message\r\n            })\r\n        });\r\n};\r\n\r\n// GET COMEDY SHOWS\r\n\r\nexport const getComedyShows = () => (dispatch) =>{\r\n    axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=1&with_genres=35`)\r\n        .then(res => {\r\n            // Response.data is the object of shows\r\n            const shows = res.data[\"results\"];\r\n            dispatch({\r\n                type: COMEDY_SHOWS_SUCCESS,\r\n                payload: shows\r\n            });\r\n        }).catch(err => {\r\n            dispatch({\r\n                type: FETCH_SHOWS_FAILURE,\r\n                error: err.message\r\n            })\r\n        });\r\n};\r\n\r\n// GET SCI-FI SHOWS\r\n\r\nexport const getSciFiShows = () => (dispatch) =>{\r\n    axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=1&with_genres=10765`)\r\n        .then(res => {\r\n            // Response.data is the object of shows\r\n            const shows = res.data[\"results\"];\r\n            dispatch({\r\n                type: SCIFI_SHOWS_SUCCESS,\r\n                payload: shows\r\n            });\r\n        }).catch(err => {\r\n            dispatch({\r\n                type: FETCH_SHOWS_FAILURE,\r\n                error: err.message\r\n            })\r\n        });\r\n};\r\n\r\n// GET CRIME SHOWS\r\n\r\nexport const getCrimeShows = () => (dispatch) =>{\r\n    axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=1&with_genres=80`)\r\n        .then(res => {\r\n            // Response.data is the object of shows\r\n            const shows = res.data[\"results\"];\r\n            dispatch({\r\n                type: CRIME_SHOWS_SUCCESS,\r\n                payload: shows\r\n            });\r\n        }).catch(err => {\r\n            dispatch({\r\n                type: FETCH_SHOWS_FAILURE,\r\n                error: err.message\r\n            })\r\n        });\r\n};\r\n\r\n//GET SHOW GENRE BY ID\r\n\r\nexport const getShowGenreById = (id, page) => (dispatch) => {\r\n    axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=${page}&with_genres=${id}`)\r\n        .then(res => {\r\n            // Response.data is the object of shows\r\n            const shows = res.data[\"results\"];\r\n            dispatch({\r\n                type: SHOW_GENRE_BY_ID_SUCCESS,\r\n                payload: shows\r\n            });\r\n        }).catch(err => {\r\n            dispatch({\r\n                type: FETCH_SHOWS_FAILURE,\r\n                error: err.message\r\n            })\r\n        });\r\n};\r\n\r\nexport const fetchData = (id, page) => (dispatch) => {\r\n    axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=${page}&with_genres=${id}`)\r\n        .then(res => {\r\n            // Response.data is the object of shows\r\n            const shows = res.data[\"results\"];\r\n            dispatch({\r\n                type: CONCAT_GENRE_BY_ID,\r\n                payload: shows\r\n            });\r\n        }).catch(err => {\r\n            dispatch({\r\n                type: FETCH_SHOWS_FAILURE,\r\n                error: err.message\r\n            })\r\n        });\r\n}","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\reducers\\index.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\actions\\types.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\reducers\\showsReducer.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\reducers\\searchReducer.js",["209","210"],"import {SEARCH_MOVIES_SUCCESS, SEARCH_MOVIES_FAILURE, SEARCH_SHOWS_SUCCESS, SEARCH_SHOWS_FAILURE }\r\n        from '../actions/types';\r\nimport produce from 'immer';\r\n\r\n\r\nconst initialState = {\r\n    loading: true,\r\n    shows: [],\r\n    movies: {\r\n        loading: true,\r\n        data: [],\r\n        pages: 0\r\n    },\r\n    shows: {\r\n        loading: true,\r\n        data: [],\r\n        pages: 0\r\n    },\r\n    total_shows: 0,\r\n    total_movies: 0,\r\n    error: ''\r\n}\r\n\r\nexport const searchReducer = (state=initialState, action) =>{\r\n    switch(action.type){\r\n        case SEARCH_MOVIES_SUCCESS: return {\r\n            ...state,\r\n            loading: false,\r\n            movies: {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                pages: action.pages\r\n            },\r\n            total_movies: action.total_results\r\n        }\r\n        case SEARCH_MOVIES_FAILURE: return {\r\n            ...state,\r\n            error: action.error\r\n        }\r\n        case SEARCH_SHOWS_SUCCESS: return {\r\n            ...state,\r\n            loading: false,\r\n            shows: {\r\n                ...state,\r\n                loading: false,\r\n                data: action.payload,\r\n                pages: action.pages\r\n            },\r\n            total_shows: action.total_results\r\n        }\r\n        case SEARCH_SHOWS_FAILURE: return {\r\n            ...state,\r\n            error: action.error\r\n        }\r\n        default: return state\r\n    }\r\n}","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\reducers\\moviesReducer.js",[],"C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\search\\SearchResults.js",["211","212"],"import React, {Fragment} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SearchResults(props)\r\n{\r\n    const multi = props.multi;\r\n    const pages = props.multi.pages;\r\n    // PAGINATION\r\n    function createPagination(){\r\n        let pageNumbers = [];\r\n        for (let i = 1; i <= pages; i++) {\r\n          pageNumbers.push(\r\n              <span key={i}>\r\n            <a\r\n              className={`page-num ${i === props.page ? 'active' : ''}`}\r\n              onClick={() => {\r\n                  props.setPage(i);\r\n                  } }>{i}\r\n            </a>\r\n            </span>\r\n            )\r\n        }\r\n        return pageNumbers;\r\n      }\r\n    \r\n\r\n    // SEARCH RESULTS\r\n    const searchResults = (\r\n        <div className=\"search-results\">\r\n                {multi.loading ? \r\n                <h2>Loading</h2>\r\n                :\r\n                multi.data.map((multi, idx) => {\r\n                    return (\r\n                        <div key={`result-${idx}`} className=\"result\">\r\n                            <div className=\"result-img-container\">\r\n                                <Link \r\n                                    to={multi.title ? `/movies/${multi.id}`\r\n                                    :`/tv/${multi.id}`}\r\n                                    >\r\n                                    <img className=\"result-img\" src={ multi.poster_path ?\r\n                                        `https://www.themoviedb.org/t/p/original${multi.poster_path}`\r\n                                        : `${process.env.PUBLIC_URL}/default-placeholder-image.png`\r\n                                    }\r\n                                    />\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"result-info\">\r\n                                <Link className=\"result-title\" \r\n                                    to={ multi.title ? `/movies/${multi.id}`\r\n                                                        :`/tv/${multi.id}`}>\r\n                                        {multi.title? multi.title : multi.name}\r\n                                </Link>\r\n                                <p className=\"result-release-date\">\r\n                                    {multi.release_date}\r\n                                </p>\r\n                                <p className=\"result-overview\">\r\n                                    {multi.overview}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        )\r\n                })}\r\n                <div className=\"pagination\">\r\n                    {createPagination()}\r\n                </div>\r\n            </div>\r\n    );\r\n    return (\r\n        <Fragment key={props.active}>\r\n            {searchResults}\r\n        </Fragment>\r\n        \r\n    )\r\n}","C:\\Users\\gregk\\frontend_projects\\video-library\\myvids\\src\\components\\layout\\ScrollToTop.js",[],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":22,"column":8,"nodeType":"219","endLine":22,"endColumn":10,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":39,"column":25,"nodeType":"223","endLine":39,"endColumn":69},{"ruleId":"221","severity":1,"message":"222","line":42,"column":25,"nodeType":"223","endLine":42,"endColumn":84},{"ruleId":"224","severity":1,"message":"225","line":67,"column":37,"nodeType":"223","endLine":68,"endColumn":106},{"ruleId":"224","severity":1,"message":"225","line":76,"column":17,"nodeType":"223","endLine":80,"endColumn":29},{"ruleId":"226","severity":1,"message":"227","line":78,"column":37,"nodeType":"228","messageId":"229","endLine":78,"endColumn":39},{"ruleId":"230","severity":1,"message":"231","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":14},{"ruleId":"217","severity":1,"message":"234","line":23,"column":8,"nodeType":"219","endLine":23,"endColumn":10,"suggestions":"235"},{"ruleId":"221","severity":1,"message":"236","line":33,"column":25,"nodeType":"223","endLine":33,"endColumn":55},{"ruleId":"221","severity":1,"message":"236","line":36,"column":25,"nodeType":"223","endLine":36,"endColumn":55},{"ruleId":"230","severity":1,"message":"237","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"217","severity":1,"message":"238","line":38,"column":8,"nodeType":"219","endLine":38,"endColumn":22,"suggestions":"239"},{"ruleId":"226","severity":1,"message":"227","line":47,"column":31,"nodeType":"228","messageId":"229","endLine":47,"endColumn":33},{"ruleId":"217","severity":1,"message":"240","line":18,"column":8,"nodeType":"219","endLine":18,"endColumn":10,"suggestions":"241"},{"ruleId":"221","severity":1,"message":"222","line":38,"column":25,"nodeType":"223","endLine":38,"endColumn":69},{"ruleId":"221","severity":1,"message":"222","line":41,"column":25,"nodeType":"223","endLine":41,"endColumn":84},{"ruleId":"226","severity":1,"message":"227","line":57,"column":49,"nodeType":"228","messageId":"229","endLine":57,"endColumn":51},{"ruleId":"224","severity":1,"message":"225","line":69,"column":37,"nodeType":"223","endLine":70,"endColumn":106},{"ruleId":"224","severity":1,"message":"225","line":78,"column":17,"nodeType":"223","endLine":81,"endColumn":94},{"ruleId":"226","severity":1,"message":"227","line":80,"column":37,"nodeType":"228","messageId":"229","endLine":80,"endColumn":39},{"ruleId":"224","severity":1,"message":"225","line":62,"column":29,"nodeType":"223","endLine":63,"endColumn":99},{"ruleId":"221","severity":1,"message":"222","line":13,"column":29,"nodeType":"223","endLine":13,"endColumn":41},{"ruleId":"221","severity":1,"message":"222","line":16,"column":29,"nodeType":"223","endLine":16,"endColumn":41},{"ruleId":"221","severity":1,"message":"222","line":19,"column":29,"nodeType":"223","endLine":19,"endColumn":41},{"ruleId":"224","severity":1,"message":"225","line":41,"column":21,"nodeType":"223","endLine":41,"endColumn":101},{"ruleId":"226","severity":1,"message":"227","line":13,"column":57,"nodeType":"228","messageId":"229","endLine":13,"endColumn":59},{"ruleId":"221","severity":1,"message":"222","line":24,"column":15,"nodeType":"223","endLine":24,"endColumn":56},{"ruleId":"221","severity":1,"message":"222","line":27,"column":15,"nodeType":"223","endLine":27,"endColumn":68},{"ruleId":"226","severity":1,"message":"227","line":39,"column":57,"nodeType":"228","messageId":"229","endLine":39,"endColumn":59},{"ruleId":"221","severity":1,"message":"222","line":58,"column":15,"nodeType":"223","endLine":58,"endColumn":56},{"ruleId":"221","severity":1,"message":"222","line":61,"column":15,"nodeType":"223","endLine":61,"endColumn":59},{"ruleId":"226","severity":1,"message":"227","line":89,"column":27,"nodeType":"228","messageId":"229","endLine":89,"endColumn":29},{"ruleId":"226","severity":1,"message":"227","line":22,"column":19,"nodeType":"228","messageId":"229","endLine":22,"endColumn":21},{"ruleId":"226","severity":1,"message":"227","line":39,"column":28,"nodeType":"228","messageId":"229","endLine":39,"endColumn":30},{"ruleId":"224","severity":1,"message":"225","line":79,"column":29,"nodeType":"223","endLine":80,"endColumn":99},{"ruleId":"226","severity":1,"message":"227","line":41,"column":59,"nodeType":"228","messageId":"229","endLine":41,"endColumn":61},{"ruleId":"230","severity":1,"message":"242","line":4,"column":10,"nodeType":"232","messageId":"233","endLine":4,"endColumn":21},{"ruleId":"226","severity":1,"message":"227","line":13,"column":22,"nodeType":"228","messageId":"229","endLine":13,"endColumn":24},{"ruleId":"217","severity":1,"message":"243","line":20,"column":8,"nodeType":"219","endLine":20,"endColumn":10,"suggestions":"244"},{"ruleId":"217","severity":1,"message":"245","line":29,"column":8,"nodeType":"219","endLine":29,"endColumn":18,"suggestions":"246"},{"ruleId":"224","severity":1,"message":"225","line":54,"column":29,"nodeType":"223","endLine":55,"endColumn":98},{"ruleId":"224","severity":1,"message":"225","line":78,"column":29,"nodeType":"223","endLine":79,"endColumn":98},{"ruleId":"226","severity":1,"message":"227","line":98,"column":27,"nodeType":"228","messageId":"229","endLine":98,"endColumn":29},{"ruleId":"226","severity":1,"message":"227","line":12,"column":48,"nodeType":"228","messageId":"229","endLine":12,"endColumn":50},{"ruleId":"226","severity":1,"message":"227","line":18,"column":48,"nodeType":"228","messageId":"229","endLine":18,"endColumn":50},{"ruleId":"226","severity":1,"message":"227","line":14,"column":22,"nodeType":"228","messageId":"229","endLine":14,"endColumn":24},{"ruleId":"217","severity":1,"message":"247","line":22,"column":8,"nodeType":"219","endLine":22,"endColumn":10,"suggestions":"248"},{"ruleId":"217","severity":1,"message":"249","line":32,"column":8,"nodeType":"219","endLine":32,"endColumn":18,"suggestions":"250"},{"ruleId":"224","severity":1,"message":"225","line":55,"column":33,"nodeType":"223","endLine":56,"endColumn":103},{"ruleId":"224","severity":1,"message":"225","line":80,"column":29,"nodeType":"223","endLine":81,"endColumn":99},{"ruleId":"226","severity":1,"message":"227","line":101,"column":20,"nodeType":"228","messageId":"229","endLine":101,"endColumn":22},{"ruleId":"230","severity":1,"message":"251","line":4,"column":30,"nodeType":"232","messageId":"233","endLine":4,"endColumn":53},{"ruleId":"230","severity":1,"message":"252","line":3,"column":8,"nodeType":"232","messageId":"233","endLine":3,"endColumn":15},{"ruleId":"253","severity":1,"message":"254","line":14,"column":5,"nodeType":"255","messageId":"229","endLine":14,"endColumn":10},{"ruleId":"221","severity":1,"message":"236","line":14,"column":13,"nodeType":"223","endLine":18,"endColumn":23},{"ruleId":"224","severity":1,"message":"225","line":41,"column":37,"nodeType":"223","endLine":45,"endColumn":39},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getShowCredits', 'getShowDetail', 'getShowVideos', 'getShowWatchProviders', and 'getSimilarShows'. Either include them or remove the dependency array. If 'getShowDetail' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["258"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getActionMovies', 'getActionShows', 'getAnimationMovies', 'getComedyShows', 'getSciFiShows', 'getThrillerMovies', 'getTrending', and 'getTrendingShows'. Either include them or remove the dependency array. If 'getTrending' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["259"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Fragment' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUrlParams', 'dbFriendly', 'history', 'searchMovies', and 'searchShows'. Either include them or remove the dependency array. If 'searchMovies' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["260"],"React Hook useEffect has missing dependencies: 'getMovieCredits', 'getMovieDetail', 'getSimilarMovies', 'getVideos', and 'getWatchProviders'. Either include them or remove the dependency array. If 'getMovieDetail' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["261"],"'getTrending' is defined but never used.","React Hook useEffect has missing dependencies: 'genre.id', 'getShowGenreById', and 'getTrendingShows'. Either include them or remove the dependency array. If 'getTrendingShows' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["262"],"React Hook useEffect has missing dependencies: 'fetchData' and 'page'. Either include them or remove the dependency array. If 'fetchData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["263"],"React Hook useEffect has missing dependencies: 'genre.id', 'getGenreById', and 'getTrending'. Either include them or remove the dependency array. If 'getTrending' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["264"],"React Hook useEffect has missing dependencies: 'fetchMoviesData' and 'page'. Either include them or remove the dependency array. If 'fetchMoviesData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["265"],"'ANIMATION_SHOWS_SUCCESS' is defined but never used.","'produce' is defined but never used.","no-dupe-keys","Duplicate key 'shows'.","ObjectExpression","no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},"Update the dependencies array to be: [getShowCredits, getShowDetail, getShowVideos, getShowWatchProviders, getSimilarShows]",{"range":"282","text":"283"},"Update the dependencies array to be: [getActionMovies, getActionShows, getAnimationMovies, getComedyShows, getSciFiShows, getThrillerMovies, getTrending, getTrendingShows]",{"range":"284","text":"285"},"Update the dependencies array to be: [page, active, currentUrlParams, searchMovies, dbFriendly, searchShows, history]",{"range":"286","text":"287"},"Update the dependencies array to be: [getMovieCredits, getMovieDetail, getSimilarMovies, getVideos, getWatchProviders]",{"range":"288","text":"289"},"Update the dependencies array to be: [genre.id, getShowGenreById, getTrendingShows]",{"range":"290","text":"291"},"Update the dependencies array to be: [fetchData, isBottom, page]",{"range":"292","text":"293"},"Update the dependencies array to be: [genre.id, getGenreById, getTrending]",{"range":"294","text":"295"},"Update the dependencies array to be: [fetchMoviesData, isBottom, page]",{"range":"296","text":"297"},[755,757],"[getShowCredits, getShowDetail, getShowVideos, getShowWatchProviders, getSimilarShows]",[918,920],"[getActionMovies, getActionShows, getAnimationMovies, getComedyShows, getSciFiShows, getThrillerMovies, getTrending, getTrendingShows]",[1320,1334],"[page, active, currentUrlParams, searchMovies, dbFriendly, searchShows, history]",[744,746],"[getMovieCredits, getMovieDetail, getSimilarMovies, getVideos, getWatchProviders]",[692,694],"[genre.id, getShowGenreById, getTrendingShows]",[896,906],"[fetchData, isBottom, page]",[678,680],"[genre.id, getGenreById, getTrending]",[898,908],"[fetchMoviesData, isBottom, page]"]